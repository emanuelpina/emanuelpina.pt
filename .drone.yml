kind: pipeline
name: production

trigger:
  branch:
    - main

steps:
- name: build
  image: quay.io/emanuelpina/docker-hugo
  commands:
    - hugo --minify

- name: deploy
  image: quay.io/emanuelpina/docker-hugo
  environment:
    SSH_KEY:
      from_secret: drone_ssh_key
    USER:
      from_secret: user
    HOST:
      from_secret: host
  commands:
  - eval `ssh-agent -s`
  - echo "$SSH_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - rsync -rvh -e "ssh -p 22" /drone/src/public/ $USER@$HOST:~/blog/ --checksum
  - rm -rf /drone/src/*

- name: purge cdn
  image: quay.io/emanuelpina/docker-hugo
  environment:
    CDN_TOKEN:
      from_secret: cdn_token
    CDN_PULLZONE:
      from_secret: cdn_pullzone
  commands:
  - "curl -d -v -f --include --request POST --header \"Content-Type: application/json\" --header \"Accept: application/json\" --header \"AccessKey: $CDN_TOKEN\" \"https://bunnycdn.com/api/pullzone/$CDN_PULLZONE/purgeCache\""

- name: notify
  image: appleboy/drone-telegram
  settings:
    to:
      from_secret: telegram_user
    token:
      from_secret: telegram_token
    format: markdown
    message: >
      {{#success build.status}}
        #{{build.number}}. {{commit.message}} [Build succeeded!]({{build.link}})
      {{else}}
        #{{build.number}}. {{commit.message}} [Build failed!]({{build.link}})
      {{/success}}
  when:
    status:
    - success
    - failure